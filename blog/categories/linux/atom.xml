<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类：linux | 冷雨之家]]></title>
  <link href="http://douxinchun.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://douxinchun.github.io/"/>
  <updated>2018-07-19T09:46:48+08:00</updated>
  <id>http://douxinchun.github.io/</id>
  <author>
    <name><![CDATA[Spring]]></name>
    <email><![CDATA[douxinchunlengyu@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[在CentOS下安装SVN Server]]></title>
    <link href="http://douxinchun.github.io/blog/20150505/set-up-svnserver-under-centos.html"/>
    <updated>2015-05-05T14:12:48+08:00</updated>
    <id>http://douxinchun.github.io/blog/20150505/set-up-svnserver-under-centos</id>
    <content type="html"><![CDATA[<h2>OverView</h2>

<p>之前搭建SVN Server都是在WindowsServer下直接安装一个<a href="https://www.visualsvn.com/">Visual SVN</a>,近期在一个项目中发现对方使用的是阿里云的云服务器,而且是CentOS的操作系统.特此记录一下自己的搭建过程,以备后用.</p>

<!--more-->


<p>整个过程分为5个部分.<br/>
1. 连接云服务器<br/>
2. 安装SVN Server<br/>
3. 配置SVN Server<br/>
4. 配置防火墙开通端口 <br/>
5. 启动SVN服务.<br/>
最后,我会在文章的末尾总结一下自己在搭建的过程中遇到的问题汇总.</p>

<h3>1.连接云服务器</h3>

<p>由于需要连接的是centOS系统,所有先放弃Windows和Mac OS X上的远端桌面连接工具吧.Windows上应该是需要一个SSH的客户端工具.<br/>
打开Terminal ,root 是username 后面跟的是ip地址<br/>
{% codeblock   Terminal %}
localhost:~ douxinchun$ ssh -l root 182.92.178.156
{% endcodeblock %}<br/>
按照提示输入密码,登录成功后显示如下:</p>

<p>{% codeblock   Terminal %}
Last login: Mon May  4 16:31:40 2015 from 111.203.240.200</p>

<p>Welcome to aliyun Elastic Compute Service!</p>

<p>[root@iZ256vx3u5fZ ~]#
{% endcodeblock %}</p>

<h3>2.安装SVN Server</h3>

<p>检查是否安装<br/>
{% codeblock   Terminal %}
rpm -qa subversion
[root@iZ256vx3u5fZ /]# rpm -qa subversion
subversion-1.6.11-12.el6_6.x86_64
[root@iZ256vx3u5fZ /]#
{% endcodeblock %}<br/>
卸载旧的版本<br/>
{%codeblock Terminal%}
yum remove subversion
{%endcodeblock%}
安装<br/>
{%codeblock Terminal%}
yum install -y subversion
{%endcodeblock%}
验证安装是否成功
{%codeblock Terminal%}
svnserve &ndash;version
[root@iZ256vx3u5fZ /]# svnserve &ndash;version
svnserve，版本 1.6.11 (r934486)
   编译于 Feb 10 2015，22:08:22</p>

<p>版权所有 &copy; 2000-2009 CollabNet。
Subversion 是开放源代码软件，请参阅 <a href="http://subversion.tigris.org/">http://subversion.tigris.org/</a> 站点。
此产品包含由 CollabNet(<a href="http://www.Collab.Net/">http://www.Collab.Net/</a>) 开发的软件。</p>

<p>下列版本库后端(FS) 模块可用:</p>

<ul>
<li>fs_base : 模块只能操作BDB版本库。</li>
<li>fs_fs : 模块与文本文件(FSFS)版本库一起工作。</li>
</ul>


<p>Cyrus SASL 认证可用。</p>

<p>[root@iZ256vx3u5fZ /]#
{%endcodeblock%}</p>

<h3>3.配置SVN Server</h3>

<p>首先,创建一个SVN的版本库</p>

<p>{%codeblock Terminal%}
[root@iZ256vx3u5fZ svn]# mkdir /home/svn/testRepo
[root@iZ256vx3u5fZ svn]# svnadmin create /home/svn/testRepo
[root@iZ256vx3u5fZ svn]# cd /home/svn/testRepo/
[root@iZ256vx3u5fZ testRepo]# ls -a
.  ..  conf  db  format  hooks  locks  README.txt
{%endcodeblock%}
 如果创建成功,testRepo目录下会多出几个文件夹,进入到conf文件夹会有3个配置文件:<br/>
 (1). svnserve.conf:  svn服务综合配置文件. <br/>
 (2). passwd:  用户名口令文件。<br/>
 (3). authz:   权限配置文件</p>

<h4>passwd文件</h4>

<p>{%codeblock Terminal%}
[users]</p>

<h1>harry = harryssecret</h1>

<h1>sally = sallyssecret</h1>

<p>svnuser=123456               <br/>
{%endcodeblock%}
svnuser为用户名.123456为密码</p>

<h4>authz文件</h4>

<p>添加一行这个
{%codeblock Terminal%}
[/]
svnuser=rw
{%endcodeblock%}
意思是svnuser用户对所有的目录有读写权限,如果需要详细的分组,可以参照这里[<a href="http://www.blogjava.net/rockblue1988/archive/2014/11/19/420246.aspx">http://www.blogjava.net/rockblue1988/archive/2014/11/19/420246.aspx</a>]</p>

<h4>svnserve.conf文件</h4>

<p>{%codeblock Terminal%}</p>

<h1>匿名访问者权限</h1>

<p>anon-access = none</p>

<h1>验证用户权限</h1>

<p>auth-access = write</p>

<h1>密码文件地址</h1>

<p>password-db = /home/svn/testRepo/passwd</p>

<h1>权限文件地址</h1>

<p>authz-db = /home/svn/testRepo/authz</p>

<h1>项目名称（UUID）</h1>

<p>realm =testRepo
{%endcodeblock%}
采用默认配置. 以上语句都必须顶格写, 左侧不能留空格, 否则会出错.</p>

<h3>4.打开Linux下的防火墙端口</h3>

<p>默认是3690端口，你也可以用别的。已开启的跳过这一步
{%codeblock Terminal%}
修改
iptables -I INPUT -p tcp &ndash;dport 3690 -j ACCEPT
保存
/etc/rc.d/init.d/iptables save
重启
service iptables restart
查看
/etc/init.d/iptables status
{%endcodeblock%}</p>

<h3>5.启动SVN服务</h3>

<p>{%codeblock%}
svnserve -d -r /home/svn
{%endcodeblock%}
-d:守护进程
-r:svn根目录
这里注意启动时的目录一定不要再往下写一级,不然客户端再按照下面的地址访问的时候,会提示错误:<br/>
<code>
XXXXXXX(别怪我,实在记不清了)non existent in revision 0
</code><br/>
假设服务端IP为182.92.178.156，那么如下设置后testRepo的访问目录就为：
svn://182.92.178.156:3690/testRepo</p>

<p>如果端口被占用可以重新换一个端口运行,更换端口可以让一台服务器运行多个SVN Server,不要忘记按照第4步在iptable中打开相应的端口
{%codeblock%}
svnserve -d -r /home/svn  &ndash;listen-port 3391
{%endcodeblock%}
关闭SVN服务
{%codeblock%}
ps -aux|grep svn<br/>
kill 1755 进程id<br/>
{%endcodeblock%}</p>

<p>启动完成后,客户端就可以成功的连接了<br/>
{%img /blog_reference_image/2015/5/svn_client.png%}</p>

<hr />

<h3>6.遇到的问题</h3>

<p>1.端口被占用
{%codeblock%}
svnserve: 不能绑定服务器套接字: 地址已在使用
{%endcodeblock%}
更换端口,或者关闭正在运行的SVN服务,参见第5步,启动服务</p>

<p>2.导入工程<br/>
{%codeblock%}
$ mkdir MyProject<br/>
$ mkdir MyProject/trunk<br/>
$ mkdir MyProject/branches<br/>
$ mkdir MyProject/tags<br/>
svn import MyProject svn://182.92.178.156/testRepo/MyProject -m &ldquo;first import project&rdquo;<br/>
{%endcodeblock%}</p>

<p>3.导出工程
{%codeblock%}
svn co svn://192.168.5.228/testRepo/MyProject<br/>
{%endcodeblock%}</p>

<p>4.客户端查看不到日志<br/>
修改svnserver.conf文件里面：
anon-access = read &ndash;>修改为 anon-access = none</p>

<h3>7.添加开机启动</h3>

<p>首先：编写一个启动脚本svn_startup.sh，我放在/root/svn_startup.sh</p>

<pre><code>#!/bin/bash
/usr/bin/svnserve -d -r /home/svn/
</code></pre>

<p>这里的svnserve路径保险起见，最好写绝对路径,因为启动的时候，环境变量也许没加载.
绝对路径怎么查?
<code>
which svnserve
</code></p>

<p>这里还有可能碰到一个问题，如果你在windows下建立和编写的脚步，拿到linux下，用vi或者vim修改后可能会无法执行，这是文件格式的问题
<code>
vi svn_startup.sh
输入:set ff 回车
如果显示的结果不是fileformat=unix
再次输入
set ff=unix
就OK了
</code>
然后修改该脚本的执行权限
<code>
chmod ug+x svn_startup.sh
</code>
或者万能的
<code>
chmod 777 svn_startup.sh
</code>
最后：加入自动运行
<code>
vi /etc/rc.d/rc.local
</code>
在末尾添加脚本的路径，如：
<code>
/root/svn_startup.sh
</code>
现在，你可以重启一下试试了。 不懂得怎么确认成功？败给你了
<code>
ps -ef|grep svnserve
</code></p>

<h3>参考来源</h3>

<p><a href="http://blog.csdn.net/shangliuyan/article/details/7351675">http://blog.csdn.net/shangliuyan/article/details/7351675</a>
<a href="http://www.blogjava.net/rockblue1988/archive/2014/11/19/420246.aspx">http://www.blogjava.net/rockblue1988/archive/2014/11/19/420246.aspx</a>
<a href="http://www.centoscn.com/CentosServer/ftp/2014/0306/2505.html">http://www.centoscn.com/CentosServer/ftp/2014/0306/2505.html</a>
<a href="http://www.blogjava.net/nkjava/archive/2011/08/29/357502.html">http://www.blogjava.net/nkjava/archive/2011/08/29/357502.html</a>
<a href="http://bbs.csdn.net/topics/390757995">http://bbs.csdn.net/topics/390757995</a></p>
]]></content>
  </entry>
  
</feed>
